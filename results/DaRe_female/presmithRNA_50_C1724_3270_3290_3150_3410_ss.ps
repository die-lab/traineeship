%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Thu Feb 10 10:45:08 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: -T 20.000000 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UCCGUGCAGAAGCGGAUAUAAUAAUACAAGACGAGAAGACCCUUUGGAGCUUAAGGUACAAGAUUUAAUUUACAUCAAGCAAACCAAUAAAAGUGAUUAAACUAGUAAAAGAUAAACCUCUACCUUCGGUUGGGGCGACCACGGAGUAAAAAACAACCUCCAAGCGGAACGGGCACAGCCCUAAAACCAAGAGAAACAUCUCUAAGCCUCAGAACACCUGACCAAAGACGAUCCGGCCUAUAAGCCGAUCAACGA\
ACCAAG\
) } def
/len { sequence length } bind def

/coor [
[126.19633484 296.87997437]
[123.15981293 311.56939697]
[120.12328339 326.25885010]
[117.08676147 340.94827271]
[114.05023956 355.63769531]
[122.94023895 368.70458984]
[119.90470886 384.21463013]
[106.74457550 392.96597290]
[91.26750183 389.76663208]
[82.65576935 376.51470947]
[86.01856232 361.07232666]
[99.36080170 352.60119629]
[102.39732361 337.91174316]
[105.43385315 323.22232056]
[108.47037506 308.53286743]
[111.50690460 293.84344482]
[105.25495148 307.47842407]
[96.07759094 319.34335327]
[84.45169067 328.82165527]
[70.98133850 335.42086792]
[56.36647034 338.79809570]
[41.36648178 338.77783203]
[26.76079369 335.36111450]
[13.30832386 328.72552490]
[1.70807922 319.21582031]
[-7.43718243 307.32617188]
[-13.65226555 293.67431641]
[-16.61422729 278.96966553]
[-16.16916275 263.97628784]
[-12.34019756 249.47320557]
[-5.32628822 236.21406555]
[4.50811625 224.88778687]
[16.65201187 216.08291626]
[30.47439003 210.25694275]
[45.25702667 207.71261597]
[60.23180389 208.58212280]
[74.62062073 212.82028198]
[87.67581177 220.20687866]
[98.71903229 230.35810852]
[107.17645264 242.74649048]
[112.60862732 256.72830200]
[114.73326111 271.57595825]
[115.99082184 256.62878418]
[117.24837494 241.68157959]
[118.50593567 226.73439026]
[119.76348877 211.78720093]
[121.02104950 196.83999634]
[54.35556030 178.13633728]
[21.76140594 124.17241669]
[6.76571989 124.53210449]
[-8.22996712 124.89179230]
[-23.22565460 125.25148010]
[-32.08674240 137.85256958]
[-46.50018692 142.76235962]
[-60.87095261 138.29635620]
[-69.75006104 126.36743164]
[-84.74574280 126.72711945]
[-99.74143219 127.08680725]
[-108.21420288 130.41236877]
[-114.91883850 127.35981750]
[-129.91775513 127.53968048]
[-139.68440247 139.75224304]
[-155.02626038 142.77903748]
[-168.69937134 135.19090271]
[-174.24772644 120.57071686]
[-169.05154419 105.82169342]
[-155.56431580 97.90785980]
[-140.15429688 100.56590271]
[-130.09762573 112.54075623]
[-115.09869385 112.36090088]
[-100.10112000 112.09111786]
[-85.10543823 111.73143005]
[-70.10974884 111.37174225]
[-61.81278229 99.03082275]
[-47.67266464 93.88095856]
[-33.04039764 98.09404755]
[-23.58534431 110.25579834]
[-8.58965683 109.89610291]
[6.40603018 109.53641510]
[21.40171623 109.17672729]
[24.12582207 102.18893433]
[10.15023518 96.74072266]
[-3.82535052 91.29251099]
[-17.80093765 85.84430695]
[-32.77608871 84.98125458]
[-36.58267593 70.47229767]
[-23.96003342 62.36865997]
[-12.35272694 71.86872101]
[1.62285936 77.31692505]
[15.59844589 82.76513672]
[29.57403183 88.21334839]
[32.29813766 81.22555542]
[21.50248909 70.81143188]
[10.70683956 60.39730835]
[-5.08839798 60.93210602]
[-16.57827377 50.08045578]
[-16.94604683 34.28044891]
[-5.97352600 22.90594482]
[9.82948780 22.70523834]
[21.08734703 33.79740524]
[21.12096405 49.60165787]
[31.91661263 60.01578140]
[42.71226120 70.42990875]
[49.42716217 67.08923340]
[42.74582291 53.65943146]
[36.06448364 40.22962189]
[29.38314438 26.79981613]
[22.70180511 13.37001038]
[12.19756985 2.66202140]
[19.13565063 -10.63696480]
[33.92769241 -8.14788628]
[36.13161087 6.68867064]
[42.81295013 20.11847687]
[49.49428940 33.54828262]
[56.17563248 46.97808838]
[62.85697174 60.40789795]
[69.57187653 57.06722641]
[67.77755737 42.17493439]
[65.98324585 27.28263855]
[64.18892670 12.39034367]
[54.85639572 -0.38519493]
[61.01568985 -13.94662380]
[59.22137451 -28.83891869]
[57.42705917 -43.73121262]
[49.52944183 -58.73334503]
[61.75901031 -70.47532654]
[76.42758942 -61.97419739]
[72.31935883 -45.52552795]
[74.11367035 -30.63323212]
[75.90798187 -15.74093819]
[85.11217499 -4.03059673]
[79.08122253 10.59602928]
[80.87554169 25.48832321]
[82.66985321 40.38061905]
[84.46416473 55.27291107]
[91.80888367 56.79117584]
[101.78308105 45.58780670]
[106.49832153 59.82770157]
[113.84304047 61.34596252]
[121.39489746 48.38566208]
[121.65751648 32.56663513]
[134.75033569 25.46541977]
[142.14625549 12.41550064]
[149.38516235 -0.72216177]
[156.62408447 -13.85982418]
[163.86299133 -26.99748611]
[155.37271118 -39.73222733]
[153.78459167 -54.95512009]
[159.46359253 -69.16806030]
[171.10470581 -79.10501099]
[186.03289795 -82.48253632]
[200.81777954 -78.52450562]
[212.06188965 -68.14044952]
[217.18141174 -53.71654129]
[214.99990845 -38.56729507]
[206.01870728 -26.17389297]
[192.30158997 -19.38424873]
[177.00065613 -19.75857544]
[169.76174927 -6.62091303]
[162.52282715 6.51674938]
[155.28392029 19.65441132]
[155.71742249 24.38176537]
[153.20755005 29.43623543]
[147.71064758 33.01728058]
[147.98818970 47.90930176]
[134.35519409 55.93752289]
[126.80333710 68.89782715]
[132.01040649 74.29564667]
[146.56675720 70.67454529]
[142.42453003 85.09130096]
[147.63159180 90.48912048]
[160.85510254 83.40825653]
[174.07861328 76.32739258]
[187.30213928 69.24653625]
[198.41117859 56.43929291]
[213.79319763 63.56879807]
[211.20048523 80.32332611]
[194.38299561 82.47004700]
[181.15948486 89.55091095]
[167.93595886 96.63177490]
[154.71244812 103.71263885]
[156.53752136 110.98719025]
[171.08662415 107.33703613]
[185.63572693 103.68688202]
[200.18489075 100.03696442]
[203.83456421 114.58618927]
[189.28588867 118.23598480]
[174.73678589 121.88613892]
[160.18768311 125.53629303]
[162.01275635 132.81083679]
[177.01275635 132.81083679]
[192.01275635 132.81083679]
[207.01275635 132.81083679]
[222.01275635 132.81083679]
[235.93656921 124.14714050]
[250.27200317 132.11126709]
[250.27200317 148.51042175]
[235.93656921 156.47454834]
[222.01275635 147.81083679]
[207.01275635 147.81083679]
[192.01275635 147.81083679]
[177.01275635 147.81083679]
[162.01275635 147.81083679]
[160.36264038 155.12705994]
[174.99508667 158.42729187]
[186.01725769 168.60136414]
[171.69487000 173.05973816]
[157.06242371 169.75950623]
[155.41230774 177.07572937]
[168.96009827 183.51445007]
[182.50790405 189.95317078]
[196.05570984 196.39189148]
[211.59208679 192.39183044]
[224.31901550 202.15934753]
[224.47351074 218.20166016]
[211.93702698 228.21246338]
[196.32650757 224.51234436]
[189.61698914 209.93969727]
[176.06918335 203.50097656]
[162.52137756 197.06225586]
[148.97358704 190.62353516]
[135.96824646 198.09756470]
[134.71067810 213.04475403]
[133.45312500 227.99194336]
[132.19557190 242.93913269]
[130.93800354 257.88632202]
[129.68045044 272.83352661]
[141.67233276 269.80239868]
[155.76272583 273.44168091]
[168.76443481 284.49301147]
[176.31629944 297.45330811]
[183.86816406 310.41360474]
[191.42002869 323.37390137]
[198.42160034 329.18984985]
[198.98367310 336.53518677]
[206.37957764 349.58511353]
[213.77549744 362.63504028]
[229.07296753 366.60528564]
[237.01039124 380.27178955]
[232.87861633 395.52642822]
[219.12898254 403.31890869]
[203.91886902 399.02609253]
[196.27220154 385.19482422]
[200.72558594 370.03094482]
[193.32966614 356.98101807]
[185.93374634 343.93112183]
[178.45971680 330.92578125]
[170.90786743 317.96548462]
[163.35600281 305.00515747]
[155.80413818 292.04486084]
[148.40219116 293.25363159]
[150.81973267 308.05755615]
[153.23728943 322.86145020]
[155.65483093 337.66534424]
[158.07238770 352.46923828]
[160.48970032 367.27319336]
[145.68572998 369.69027710]
[143.26847839 354.88677979]
[140.85093689 340.08288574]
[138.43338013 325.27899170]
[136.01583862 310.47509766]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 16]
[2 15]
[3 14]
[4 13]
[5 12]
[42 227]
[43 226]
[44 225]
[45 224]
[46 223]
[47 222]
[49 80]
[50 79]
[51 78]
[52 77]
[56 73]
[57 72]
[58 71]
[60 70]
[61 69]
[92 103]
[93 102]
[94 101]
[117 135]
[118 134]
[119 133]
[120 132]
[122 130]
[123 129]
[124 128]
[139 167]
[140 166]
[142 164]
[143 161]
[144 160]
[145 159]
[146 158]
[171 181]
[172 180]
[173 179]
[174 178]
[190 203]
[191 202]
[192 201]
[193 200]
[194 199]
[209 221]
[210 220]
[211 219]
[212 218]
[230 250]
[231 249]
[232 248]
[233 247]
[235 246]
[236 245]
[237 244]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
