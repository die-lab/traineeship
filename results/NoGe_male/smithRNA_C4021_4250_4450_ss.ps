%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.13
%%CreationDate: Fri Jan 14 18:09:53 2022
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: -T 20.000000 

% To switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

/RNAplot 100 dict def

RNAplot begin

%%BeginProlog

/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall        % draw outline of 2nd sequence
     } {
        /i 0 def
        coor {
            /p coor i get def
            /a arcs i get def
            /l a length def
            l 0 eq {
                %% standard point... draw simple line
                p 0 2 getinterval aload pop lineto
            } {
                %% point in loop... draw arc around loop center
                /clockwise a 5 get def
                clockwise 0.0000000 gt {
                    a 0 5 getinterval aload pop arcn
                } {
                    a 0 5 getinterval aload pop arc
                } ifelse
            } ifelse
            /i i 1 add def
        } forall
    }
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def
/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def

%%EndProlog

% data start here
/sequence { (\
UAGUGGAAGCUGCUCUUGGUUUCAAGAGGAAGCAUUUGUAGAUGUGGCUCGCUUACGCUGAGAGGAAAGCCUUUGGCUUCUUUUGAUCUCUUUUUCUUUUGUCGCUGGUUCGGUUUUUGAUAAAACAUGUUUUUUUUAGGGUAUAGGUGAUAGAGAUGUGUUGAUGGUUUUAAGUACUGUGAAGGAAUGUUUUAAAGGUUU\
) } def
/len { sequence length } bind def

/coor [
[-160.99153137 274.39440918]
[-173.18139648 283.13552856]
[-185.37126160 291.87664795]
[-197.56114197 300.61776733]
[-209.75100708 309.35885620]
[-212.44972229 324.70013428]
[-224.93650818 333.39123535]
[-239.54544067 330.72387695]
[-251.73530579 339.46499634]
[-263.92517090 348.20608521]
[-262.09182739 364.97445679]
[-272.23571777 380.49160767]
[-291.50793457 386.58157349]
[-300.43756104 398.63403320]
[-309.36721802 410.68649292]
[-318.29684448 422.73895264]
[-327.22647095 434.79141235]
[-336.15609741 446.84387207]
[-337.48379517 463.18917847]
[-352.41696167 469.96652222]
[-365.59362793 460.20397949]
[-363.45877075 443.94436646]
[-348.20855713 437.91421509]
[-339.27893066 425.86175537]
[-330.34930420 413.80932617]
[-321.41964722 401.75686646]
[-312.49002075 389.70440674]
[-303.56039429 377.65194702]
[-312.67639160 365.73983765]
[-319.07022095 379.94393921]
[-333.31280518 385.29208374]
[-346.81484985 379.10903931]
[-360.78201294 384.57879639]
[-374.74917603 390.04858398]
[-388.71633911 395.51834106]
[-402.68350220 400.98812866]
[-412.48934937 414.13259888]
[-428.74182129 411.94430542]
[-434.72180176 396.67431641]
[-424.27758789 384.03112793]
[-408.15328979 387.02096558]
[-394.18612671 381.55117798]
[-380.21896362 376.08142090]
[-366.25180054 370.61163330]
[-352.28463745 365.14187622]
[-346.57217407 351.43408203]
[-332.48541260 345.68798828]
[-318.14614868 351.77267456]
[-306.80001831 334.34173584]
[-288.50845337 328.93041992]
[-272.66629028 336.01623535]
[-260.47640991 327.27511597]
[-248.28654480 318.53399658]
[-246.12599182 303.84155273]
[-233.88824463 294.80319214]
[-218.49212646 297.16900635]
[-206.30224609 288.42788696]
[-194.11238098 279.68676758]
[-181.92251587 270.94564819]
[-169.73265076 262.20452881]
[-170.36834717 255.11100769]
[-168.48410034 248.17222595]
[-164.26866150 242.26364136]
[-158.20788574 238.14761353]
[-151.02903748 236.37516785]
[-143.61363220 237.21266174]
[-136.88925171 240.60287476]
[-124.05718231 232.83512878]
[-111.22510529 225.06738281]
[-98.39303589 217.29963684]
[-85.56095886 209.53189087]
[-72.72888184 201.76414490]
[-59.89680862 193.99639893]
[-47.06473541 186.22865295]
[-34.23265839 178.46092224]
[-21.52293777 170.49455261]
[-8.93864632 162.33148193]
[3.58178806 154.07081604]
[16.03760719 145.71302795]
[28.49342728 137.35523987]
[40.94924545 128.99746704]
[53.40506744 120.63967896]
[65.86088562 112.28189087]
[78.31670380 103.92411041]
[90.77252960 95.56632233]
[101.62365723 85.21002197]
[110.55329132 73.15756989]
[119.48292542 61.10511398]
[128.41255188 49.05266190]
[137.34219360 37.00020599]
[146.27182007 24.94775200]
[148.27029419 9.25327301]
[162.06384277 3.63303208]
[170.99348450 -8.41942215]
[172.99194336 -24.11390305]
[186.78550720 -29.73414230]
[195.71513367 -41.78659821]
[204.64476013 -53.83905029]
[206.64323425 -69.53353119]
[220.43678284 -75.15377045]
[229.36642456 -87.20623016]
[231.96351624 -95.97141266]
[238.52983093 -99.37523651]
[240.77214050 -115.03673553]
[254.65142822 -120.44178772]
[263.76742554 -132.35391235]
[272.88342285 -144.26603699]
[281.99938965 -156.17816162]
[277.87142944 -176.78987122]
[290.11154175 -193.51730347]
[310.42263794 -195.75459290]
[318.78042603 -208.21041870]
[327.04107666 -220.73085022]
[335.20416260 -233.31513977]
[343.36721802 -245.89944458]
[351.53027344 -258.48373413]
[359.69332886 -271.06802368]
[360.00228882 -287.46426392]
[374.48522949 -295.15689087]
[388.24334717 -286.23242188]
[387.12347412 -269.87155151]
[372.27761841 -262.90496826]
[364.11456299 -250.32066345]
[355.95150757 -237.73637390]
[347.78845215 -225.15208435]
[339.62536621 -212.56779480]
[338.62197876 -205.24005127]
[331.23623657 -199.85263062]
[322.87844849 -187.39682007]
[327.42987061 -179.20558167]
[328.68902588 -169.86131287]
[326.44070435 -160.64494324]
[320.95339966 -152.83541870]
[312.94808960 -147.53227234]
[303.50366211 -145.50086975]
[293.91152954 -147.06216431]
[284.79553223 -135.15003967]
[275.67953491 -123.23791504]
[266.56356812 -111.32579041]
[264.97329712 -96.51632690]
[250.44195557 -90.25924683]
[241.41886902 -78.27659607]
[232.48924255 -66.22413635]
[231.12948608 -51.39173126]
[216.69721985 -44.90942001]
[207.76759338 -32.85696411]
[198.83795166 -20.80451012]
[197.47819519 -5.97210217]
[183.04592896 0.51021075]
[174.11630249 12.56266499]
[172.75654602 27.39507294]
[158.32427979 33.87738419]
[149.39463806 45.92984009]
[140.46501160 57.98229599]
[131.53536987 70.03475189]
[122.60574341 82.08720398]
[113.67610931 94.13965607]
[116.91638184 108.78549957]
[130.09678650 115.94629669]
[143.27717590 123.10709381]
[156.51286316 130.16517639]
[169.80303955 137.12013245]
[183.09320068 144.07508850]
[196.38337708 151.03004456]
[212.06208801 147.63040161]
[224.40399170 157.88012695]
[223.94143677 173.91650391]
[211.02926636 183.43780518]
[195.57257080 179.14009094]
[189.42842102 164.32020569]
[176.13825989 157.36526489]
[162.84808350 150.41030884]
[149.55790710 143.45535278]
[142.16856384 143.13909912]
[136.11637878 136.28749084]
[122.93598175 129.12669373]
[109.75557709 121.96589661]
[104.49610138 118.16476440]
[100.90088654 113.36069489]
[99.13031006 108.02214813]
[86.67449188 116.37992859]
[74.21867371 124.73770905]
[61.76285172 133.09548950]
[49.30702972 141.45327759]
[36.85121155 149.81106567]
[24.39539146 158.16885376]
[11.93957233 166.52662659]
[6.55215263 173.91236877]
[-0.77558374 174.91577148]
[-13.35987568 183.07884216]
[-16.70544434 188.79492188]
[-21.68910217 191.54516602]
[-26.46491432 191.29298401]
[-39.29698944 199.06072998]
[-52.12906647 206.82847595]
[-64.96113586 214.59622192]
[-77.79321289 222.36396790]
[-90.62528992 230.13171387]
[-103.45736694 237.89945984]
[-116.28943634 245.66720581]
[-129.12152100 253.43495178]
] def
/arcs [
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
[]
] def
/pairs [
[1 60]
[2 59]
[3 58]
[4 57]
[5 56]
[8 53]
[9 52]
[10 51]
[13 28]
[14 27]
[15 26]
[16 25]
[17 24]
[18 23]
[29 48]
[32 45]
[33 44]
[34 43]
[35 42]
[36 41]
[67 201]
[68 200]
[69 199]
[70 198]
[71 197]
[72 196]
[73 195]
[74 194]
[75 193]
[76 190]
[77 189]
[78 187]
[79 186]
[80 185]
[81 184]
[82 183]
[83 182]
[84 181]
[85 180]
[86 157]
[87 156]
[88 155]
[89 154]
[90 153]
[91 152]
[93 150]
[94 149]
[96 147]
[97 146]
[98 145]
[100 143]
[101 142]
[103 141]
[105 139]
[106 138]
[107 137]
[108 136]
[111 129]
[112 128]
[113 126]
[114 125]
[115 124]
[116 123]
[117 122]
[158 177]
[159 176]
[160 175]
[161 173]
[162 172]
[163 171]
[164 170]
] def

init

% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
showpage
end
%%EOF
